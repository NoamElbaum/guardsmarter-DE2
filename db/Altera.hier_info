|ALL
UART_TXD <= UART:inst.UART_TXD
CLOCK_50 => UART:inst.CLOCK_50
CLOCK_50 => Writer:inst3.clk
CLOCK_50 => main:inst5.clk
CLOCK_50 => myRam:inst4.Clock
CLOCK_50 => clk_div:inst1.clock_50mhz
KEY[0] => UART:inst.RST
KEY[0] => Writer:inst3.rst
KEY[0] => main:inst5.rst
UART_RXD => UART:inst.UART_RXD
VGA_HS <= VGA_SYNC:inst2.horiz_sync_out
CLOCK_51 => VGA_SYNC:inst2.clock_50Mhz
VGA_VS <= VGA_SYNC:inst2.vert_sync_out
VGA_BLANK <= VGA_SYNC:inst2.video_on
VGA_CLK <= VGA_SYNC:inst2.pixel_clock
LEDG[1] <= UART:inst.READ_FLAG
LEDR[0] <= myRam:inst4.DataOut[0]
LEDR[1] <= myRam:inst4.DataOut[1]
LEDR[2] <= myRam:inst4.DataOut[2]
LEDR[3] <= myRam:inst4.DataOut[3]
LEDR[4] <= myRam:inst4.DataOut[4]
LEDR[5] <= myRam:inst4.DataOut[5]
LEDR[6] <= myRam:inst4.DataOut[6]
LEDR[7] <= myRam:inst4.DataOut[7]
VGA_B[9] <= VGA_SYNC:inst2.blue_out
VGA_G[9] <= VGA_SYNC:inst2.green_out
VGA_R[9] <= VGA_SYNC:inst2.red_out


|ALL|UART:inst
CLOCK_50 => TX:C1.CLK
CLOCK_50 => TX_START.CLK
CLOCK_50 => TX_DATA[0].CLK
CLOCK_50 => TX_DATA[1].CLK
CLOCK_50 => TX_DATA[2].CLK
CLOCK_50 => TX_DATA[3].CLK
CLOCK_50 => TX_DATA[4].CLK
CLOCK_50 => TX_DATA[5].CLK
CLOCK_50 => TX_DATA[6].CLK
CLOCK_50 => TX_DATA[7].CLK
CLOCK_50 => RX:C2.CLK
RST => RX_FLAG.ACLR
RST => LAST_RX[0].ACLR
RST => LAST_RX[1].ACLR
RST => LAST_RX[2].ACLR
RST => LAST_RX[3].ACLR
RST => LAST_RX[4].ACLR
RST => LAST_RX[5].ACLR
RST => LAST_RX[6].ACLR
RST => LAST_RX[7].ACLR
RST => TX_DATA[0].ACLR
RST => TX_DATA[1].ACLR
RST => TX_DATA[2].ACLR
RST => TX_DATA[3].ACLR
RST => TX_DATA[4].ACLR
RST => TX_DATA[5].ACLR
RST => TX_DATA[6].ACLR
RST => TX_DATA[7].ACLR
RST => TX_START.ENA
DATA_IN[0] => TX_DATA[0].DATAIN
DATA_IN[1] => TX_DATA[1].DATAIN
DATA_IN[2] => TX_DATA[2].DATAIN
DATA_IN[3] => TX_DATA[3].DATAIN
DATA_IN[4] => TX_DATA[4].DATAIN
DATA_IN[5] => TX_DATA[5].DATAIN
DATA_IN[6] => TX_DATA[6].DATAIN
DATA_IN[7] => TX_DATA[7].DATAIN
send => process_1.IN1
DATA_OUT[0] <= LAST_RX[0].DB_MAX_OUTPUT_PORT_TYPE
DATA_OUT[1] <= LAST_RX[1].DB_MAX_OUTPUT_PORT_TYPE
DATA_OUT[2] <= LAST_RX[2].DB_MAX_OUTPUT_PORT_TYPE
DATA_OUT[3] <= LAST_RX[3].DB_MAX_OUTPUT_PORT_TYPE
DATA_OUT[4] <= LAST_RX[4].DB_MAX_OUTPUT_PORT_TYPE
DATA_OUT[5] <= LAST_RX[5].DB_MAX_OUTPUT_PORT_TYPE
DATA_OUT[6] <= LAST_RX[6].DB_MAX_OUTPUT_PORT_TYPE
DATA_OUT[7] <= LAST_RX[7].DB_MAX_OUTPUT_PORT_TYPE
UART_TXD <= TX:C1.TX_LINE
READ_FLAG <= RX_FLAG.DB_MAX_OUTPUT_PORT_TYPE
UART_RXD => RX:C2.RX_LINE


|ALL|UART:inst|TX:C1
CLK => INDEX[0].CLK
CLK => INDEX[1].CLK
CLK => INDEX[2].CLK
CLK => INDEX[3].CLK
CLK => TX_LINE~reg0.CLK
CLK => PRSCL[0].CLK
CLK => PRSCL[1].CLK
CLK => PRSCL[2].CLK
CLK => PRSCL[3].CLK
CLK => PRSCL[4].CLK
CLK => PRSCL[5].CLK
CLK => PRSCL[6].CLK
CLK => PRSCL[7].CLK
CLK => PRSCL[8].CLK
CLK => PRSCL[9].CLK
CLK => PRSCL[10].CLK
CLK => PRSCL[11].CLK
CLK => PRSCL[12].CLK
CLK => DATAFLL[0].CLK
CLK => DATAFLL[1].CLK
CLK => DATAFLL[2].CLK
CLK => DATAFLL[3].CLK
CLK => DATAFLL[4].CLK
CLK => DATAFLL[5].CLK
CLK => DATAFLL[6].CLK
CLK => DATAFLL[7].CLK
CLK => DATAFLL[8].CLK
CLK => DATAFLL[9].CLK
CLK => BUSY~reg0.CLK
CLK => TX_FLG.CLK
START => process_0.IN1
BUSY <= BUSY~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA[0] => DATAFLL[1].DATAIN
DATA[1] => DATAFLL[2].DATAIN
DATA[2] => DATAFLL[3].DATAIN
DATA[3] => DATAFLL[4].DATAIN
DATA[4] => DATAFLL[5].DATAIN
DATA[5] => DATAFLL[6].DATAIN
DATA[6] => DATAFLL[7].DATAIN
DATA[7] => DATAFLL[8].DATAIN
TX_LINE <= TX_LINE~reg0.DB_MAX_OUTPUT_PORT_TYPE


|ALL|UART:inst|RX:C2
CLK => DATA[0]~reg0.CLK
CLK => DATA[1]~reg0.CLK
CLK => DATA[2]~reg0.CLK
CLK => DATA[3]~reg0.CLK
CLK => DATA[4]~reg0.CLK
CLK => DATA[5]~reg0.CLK
CLK => DATA[6]~reg0.CLK
CLK => DATA[7]~reg0.CLK
CLK => DATAFLL[0].CLK
CLK => DATAFLL[1].CLK
CLK => DATAFLL[2].CLK
CLK => DATAFLL[3].CLK
CLK => DATAFLL[4].CLK
CLK => DATAFLL[5].CLK
CLK => DATAFLL[6].CLK
CLK => DATAFLL[7].CLK
CLK => DATAFLL[8].CLK
CLK => DATAFLL[9].CLK
CLK => RX_FLG.CLK
CLK => BUSY~reg0.CLK
CLK => PRSCL[0].CLK
CLK => PRSCL[1].CLK
CLK => PRSCL[2].CLK
CLK => PRSCL[3].CLK
CLK => PRSCL[4].CLK
CLK => PRSCL[5].CLK
CLK => PRSCL[6].CLK
CLK => PRSCL[7].CLK
CLK => PRSCL[8].CLK
CLK => PRSCL[9].CLK
CLK => PRSCL[10].CLK
CLK => PRSCL[11].CLK
CLK => PRSCL[12].CLK
CLK => INDEX[0].CLK
CLK => INDEX[1].CLK
CLK => INDEX[2].CLK
CLK => INDEX[3].CLK
RX_LINE => DATAFLL.DATAB
RX_LINE => DATAFLL.DATAB
RX_LINE => DATAFLL.DATAB
RX_LINE => DATAFLL.DATAB
RX_LINE => DATAFLL.DATAB
RX_LINE => DATAFLL.DATAB
RX_LINE => DATAFLL.DATAB
RX_LINE => DATAFLL.DATAB
RX_LINE => DATAFLL.DATAB
RX_LINE => DATAFLL.DATAB
RX_LINE => process_0.IN1
DATA[0] <= DATA[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA[1] <= DATA[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA[2] <= DATA[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA[3] <= DATA[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA[4] <= DATA[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA[5] <= DATA[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA[6] <= DATA[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA[7] <= DATA[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
BUSY <= BUSY~reg0.DB_MAX_OUTPUT_PORT_TYPE


|ALL|Writer:inst3
clk => last_flag.CLK
clk => RAM_OUT[0]~reg0.CLK
clk => RAM_OUT[1]~reg0.CLK
clk => RAM_OUT[2]~reg0.CLK
clk => RAM_OUT[3]~reg0.CLK
clk => RAM_OUT[4]~reg0.CLK
clk => RAM_OUT[5]~reg0.CLK
clk => RAM_OUT[6]~reg0.CLK
clk => RAM_OUT[7]~reg0.CLK
clk => W_R~reg0.CLK
rst => last_flag.ACLR
rst => RAM_OUT[0]~reg0.ACLR
rst => RAM_OUT[1]~reg0.ACLR
rst => RAM_OUT[2]~reg0.ACLR
rst => RAM_OUT[3]~reg0.ACLR
rst => RAM_OUT[4]~reg0.ACLR
rst => RAM_OUT[5]~reg0.ACLR
rst => RAM_OUT[6]~reg0.ACLR
rst => RAM_OUT[7]~reg0.ACLR
rst => W_R~reg0.ACLR
send <= <VCC>
READ_FLAG => process_0.IN1
READ_FLAG => last_flag.DATAIN
UART_IN[0] => RAM_OUT[0]~reg0.DATAIN
UART_IN[1] => RAM_OUT[1]~reg0.DATAIN
UART_IN[2] => RAM_OUT[2]~reg0.DATAIN
UART_IN[3] => RAM_OUT[3]~reg0.DATAIN
UART_IN[4] => RAM_OUT[4]~reg0.DATAIN
UART_IN[5] => RAM_OUT[5]~reg0.DATAIN
UART_IN[6] => RAM_OUT[6]~reg0.DATAIN
UART_IN[7] => RAM_OUT[7]~reg0.DATAIN
UART_OUT[0] <= <GND>
UART_OUT[1] <= <GND>
UART_OUT[2] <= <GND>
UART_OUT[3] <= <GND>
UART_OUT[4] <= <GND>
UART_OUT[5] <= <GND>
UART_OUT[6] <= <GND>
UART_OUT[7] <= <GND>
W_R <= W_R~reg0.DB_MAX_OUTPUT_PORT_TYPE
W_ADDRESS[0] <= <GND>
W_ADDRESS[1] <= <GND>
W_ADDRESS[2] <= <GND>
W_ADDRESS[3] <= <GND>
W_ADDRESS[4] <= <GND>
W_ADDRESS[5] <= <GND>
W_ADDRESS[6] <= <GND>
W_ADDRESS[7] <= <GND>
RAM_OUT[0] <= RAM_OUT[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RAM_OUT[1] <= RAM_OUT[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RAM_OUT[2] <= RAM_OUT[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RAM_OUT[3] <= RAM_OUT[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RAM_OUT[4] <= RAM_OUT[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RAM_OUT[5] <= RAM_OUT[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RAM_OUT[6] <= RAM_OUT[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RAM_OUT[7] <= RAM_OUT[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|ALL|VGA_SYNC:inst2
clock_50Mhz => video_PLL:video_PLL_inst.inclk0
red => red_out.IN1
green => green_out.IN1
blue => blue_out.IN1
red_out <= red_out~reg0.DB_MAX_OUTPUT_PORT_TYPE
green_out <= green_out~reg0.DB_MAX_OUTPUT_PORT_TYPE
blue_out <= blue_out~reg0.DB_MAX_OUTPUT_PORT_TYPE
horiz_sync_out <= horiz_sync_out~reg0.DB_MAX_OUTPUT_PORT_TYPE
vert_sync_out <= vert_sync_out~reg0.DB_MAX_OUTPUT_PORT_TYPE
video_on <= video_on_int.DB_MAX_OUTPUT_PORT_TYPE
pixel_clock <= video_PLL:video_PLL_inst.c0
pixel_row[0] <= pixel_row[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
pixel_row[1] <= pixel_row[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
pixel_row[2] <= pixel_row[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
pixel_row[3] <= pixel_row[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
pixel_row[4] <= pixel_row[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
pixel_row[5] <= pixel_row[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
pixel_row[6] <= pixel_row[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
pixel_row[7] <= pixel_row[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
pixel_row[8] <= pixel_row[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
pixel_row[9] <= pixel_row[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
pixel_column[0] <= pixel_column[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
pixel_column[1] <= pixel_column[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
pixel_column[2] <= pixel_column[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
pixel_column[3] <= pixel_column[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
pixel_column[4] <= pixel_column[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
pixel_column[5] <= pixel_column[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
pixel_column[6] <= pixel_column[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
pixel_column[7] <= pixel_column[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
pixel_column[8] <= pixel_column[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
pixel_column[9] <= pixel_column[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|ALL|VGA_SYNC:inst2|video_PLL:video_PLL_inst
inclk0 => altpll:altpll_component.inclk[0]
c0 <= altpll:altpll_component.clk[0]


|ALL|VGA_SYNC:inst2|video_PLL:video_PLL_inst|altpll:altpll_component
inclk[0] => pll.CLK
inclk[1] => ~NO_FANOUT~
fbin => ~NO_FANOUT~
pllena => ~NO_FANOUT~
clkswitch => ~NO_FANOUT~
areset => ~NO_FANOUT~
pfdena => ~NO_FANOUT~
clkena[0] => ~NO_FANOUT~
clkena[1] => ~NO_FANOUT~
clkena[2] => ~NO_FANOUT~
clkena[3] => ~NO_FANOUT~
clkena[4] => ~NO_FANOUT~
clkena[5] => ~NO_FANOUT~
extclkena[0] => ~NO_FANOUT~
extclkena[1] => ~NO_FANOUT~
extclkena[2] => ~NO_FANOUT~
extclkena[3] => ~NO_FANOUT~
scanclk => ~NO_FANOUT~
scanclkena => ~NO_FANOUT~
scanaclr => ~NO_FANOUT~
scanread => ~NO_FANOUT~
scanwrite => ~NO_FANOUT~
scandata => ~NO_FANOUT~
phasecounterselect[0] => ~NO_FANOUT~
phasecounterselect[1] => ~NO_FANOUT~
phasecounterselect[2] => ~NO_FANOUT~
phasecounterselect[3] => ~NO_FANOUT~
phaseupdown => ~NO_FANOUT~
phasestep => ~NO_FANOUT~
configupdate => ~NO_FANOUT~
fbmimicbidir <> <GND>
clk[0] <= clk[0].DB_MAX_OUTPUT_PORT_TYPE
clk[1] <= <GND>
clk[2] <= <GND>
clk[3] <= <GND>
clk[4] <= <GND>
clk[5] <= <GND>
extclk[0] <= <GND>
extclk[1] <= <GND>
extclk[2] <= <GND>
extclk[3] <= <GND>
clkbad[0] <= <GND>
clkbad[1] <= <GND>
enable1 <= <GND>
enable0 <= <GND>
activeclock <= <GND>
clkloss <= <GND>
locked <= <GND>
scandataout <= <GND>
scandone <= <GND>
sclkout0 <= <GND>
sclkout1 <= sclkout1.DB_MAX_OUTPUT_PORT_TYPE
phasedone <= <GND>
vcooverrange <= <GND>
vcounderrange <= <GND>
fbout <= <GND>
fref <= <GND>
icdrclk <= <GND>


|ALL|main:inst5
clk => R_ADDRESS[0]~reg0.CLK
clk => R_ADDRESS[1]~reg0.CLK
clk => R_ADDRESS[2]~reg0.CLK
clk => R_ADDRESS[3]~reg0.CLK
clk => R_ADDRESS[4]~reg0.CLK
clk => R_ADDRESS[5]~reg0.CLK
clk => R_ADDRESS[6]~reg0.CLK
clk => R_ADDRESS[7]~reg0.CLK
clk => B~reg0.CLK
clk => G~reg0.CLK
clk => R~reg0.CLK
rst => B~reg0.PRESET
rst => G~reg0.ACLR
rst => R~reg0.ACLR
rst => R_ADDRESS[0]~reg0.ENA
rst => R_ADDRESS[7]~reg0.ENA
rst => R_ADDRESS[6]~reg0.ENA
rst => R_ADDRESS[5]~reg0.ENA
rst => R_ADDRESS[4]~reg0.ENA
rst => R_ADDRESS[3]~reg0.ENA
rst => R_ADDRESS[2]~reg0.ENA
rst => R_ADDRESS[1]~reg0.ENA
RAM_BUSY => R_ADDRESS.OUTPUTSELECT
RAM_BUSY => R_ADDRESS.OUTPUTSELECT
RAM_BUSY => R_ADDRESS.OUTPUTSELECT
RAM_BUSY => R_ADDRESS.OUTPUTSELECT
RAM_BUSY => R_ADDRESS.OUTPUTSELECT
RAM_BUSY => R_ADDRESS.OUTPUTSELECT
RAM_BUSY => R_ADDRESS.OUTPUTSELECT
RAM_BUSY => R_ADDRESS.OUTPUTSELECT
RAM_BUSY => R~reg0.ENA
RAM_BUSY => G~reg0.ENA
RAM_BUSY => B~reg0.ENA
RAM_IN[0] => Equal0.IN15
RAM_IN[0] => Equal1.IN15
RAM_IN[1] => Equal0.IN14
RAM_IN[1] => Equal1.IN14
RAM_IN[2] => Equal0.IN13
RAM_IN[2] => Equal1.IN13
RAM_IN[3] => Equal0.IN12
RAM_IN[3] => Equal1.IN12
RAM_IN[4] => Equal0.IN11
RAM_IN[4] => Equal1.IN11
RAM_IN[5] => Equal0.IN10
RAM_IN[5] => Equal1.IN10
RAM_IN[6] => Equal0.IN9
RAM_IN[6] => Equal1.IN9
RAM_IN[7] => Equal0.IN8
RAM_IN[7] => Equal1.IN8
R_ADDRESS[0] <= R_ADDRESS[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
R_ADDRESS[1] <= R_ADDRESS[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
R_ADDRESS[2] <= R_ADDRESS[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
R_ADDRESS[3] <= R_ADDRESS[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
R_ADDRESS[4] <= R_ADDRESS[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
R_ADDRESS[5] <= R_ADDRESS[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
R_ADDRESS[6] <= R_ADDRESS[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
R_ADDRESS[7] <= R_ADDRESS[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
R <= R~reg0.DB_MAX_OUTPUT_PORT_TYPE
G <= G~reg0.DB_MAX_OUTPUT_PORT_TYPE
B <= B~reg0.DB_MAX_OUTPUT_PORT_TYPE


|ALL|myRam:inst4
DataIn[0] => Memory~10.DATAIN
DataIn[0] => Memory.DATAIN
DataIn[1] => Memory~9.DATAIN
DataIn[1] => Memory.DATAIN1
DataIn[2] => Memory~8.DATAIN
DataIn[2] => Memory.DATAIN2
DataIn[3] => Memory~7.DATAIN
DataIn[3] => Memory.DATAIN3
DataIn[4] => Memory~6.DATAIN
DataIn[4] => Memory.DATAIN4
DataIn[5] => Memory~5.DATAIN
DataIn[5] => Memory.DATAIN5
DataIn[6] => Memory~4.DATAIN
DataIn[6] => Memory.DATAIN6
DataIn[7] => Memory~3.DATAIN
DataIn[7] => Memory.DATAIN7
address_W[0] => Memory~2.DATAIN
address_W[0] => Memory.WADDR
address_W[1] => Memory~1.DATAIN
address_W[1] => Memory.WADDR1
address_W[2] => Memory~0.DATAIN
address_W[2] => Memory.WADDR2
address_W[3] => ~NO_FANOUT~
address_W[4] => ~NO_FANOUT~
address_W[5] => ~NO_FANOUT~
address_W[6] => ~NO_FANOUT~
address_W[7] => ~NO_FANOUT~
address_R[0] => Memory.RADDR
address_R[1] => Memory.RADDR1
address_R[2] => Memory.RADDR2
address_R[3] => ~NO_FANOUT~
address_R[4] => ~NO_FANOUT~
address_R[5] => ~NO_FANOUT~
address_R[6] => ~NO_FANOUT~
address_R[7] => ~NO_FANOUT~
DataOut[0] <= Memory.DATAOUT
DataOut[1] <= Memory.DATAOUT1
DataOut[2] <= Memory.DATAOUT2
DataOut[3] <= Memory.DATAOUT3
DataOut[4] <= Memory.DATAOUT4
DataOut[5] <= Memory.DATAOUT5
DataOut[6] <= Memory.DATAOUT6
DataOut[7] <= Memory.DATAOUT7
Clock => Memory~11.CLK
Clock => Memory~0.CLK
Clock => Memory~1.CLK
Clock => Memory~2.CLK
Clock => Memory~3.CLK
Clock => Memory~4.CLK
Clock => Memory~5.CLK
Clock => Memory~6.CLK
Clock => Memory~7.CLK
Clock => Memory~8.CLK
Clock => Memory~9.CLK
Clock => Memory~10.CLK
Clock => Memory.CLK0
W_R => Memory~11.DATAIN
W_R => Memory.WE


|ALL|clk_div:inst1
clock_50mhz => clock_1hz~reg0.CLK
clock_50mhz => clock_10hz~reg0.CLK
clock_50mhz => clock_100hz~reg0.CLK
clock_50mhz => clock_1khz~reg0.CLK
clock_50mhz => clock_10khz~reg0.CLK
clock_50mhz => clock_100khz~reg0.CLK
clock_50mhz => clock_1mhz~reg0.CLK
clock_50mhz => clock_1mhz_int.CLK
clock_50mhz => count_1mhz[0].CLK
clock_50mhz => count_1mhz[1].CLK
clock_50mhz => count_1mhz[2].CLK
clock_50mhz => count_1mhz[3].CLK
clock_50mhz => count_1mhz[4].CLK
clock_50mhz => count_1mhz[5].CLK
clock_1mhz <= clock_1mhz~reg0.DB_MAX_OUTPUT_PORT_TYPE
clock_100khz <= clock_100khz~reg0.DB_MAX_OUTPUT_PORT_TYPE
clock_10khz <= clock_10khz~reg0.DB_MAX_OUTPUT_PORT_TYPE
clock_1khz <= clock_1khz~reg0.DB_MAX_OUTPUT_PORT_TYPE
clock_100hz <= clock_100hz~reg0.DB_MAX_OUTPUT_PORT_TYPE
clock_10hz <= clock_10hz~reg0.DB_MAX_OUTPUT_PORT_TYPE
clock_1hz <= clock_1hz~reg0.DB_MAX_OUTPUT_PORT_TYPE


